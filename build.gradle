plugins {
    id 'java'
	id 'com.github.sherter.google-java-format' version '0.8'
	id 'signing'
	id 'maven-publish'
    id 'io.codearte.nexus-staging' version '0.21.2'
}

group 'com.cisco.trex'

ext {
    projectName = "TRex Java Sdk"
	projectDescription = "Java client SDK provides an implementation for TRex RPC APIs"
	projectUrl = "https://github.com/cisco-system-traffic-generator/trex-java-sdk"
	licenseName = "The Apache Software License, Version 2.0"
	licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.txt"
	scmConnection = "scm:git:git://github.com/cisco-system-traffic-generator/trex-java-sdk.git"
	scmDeveloperConnection = "scm:git:ssh://github.com:cisco-system-traffic-generator/trex-java-sdk.git"
	scmUrl = "https://github.com/cisco-system-traffic-generator/trex-java-sdk"
	develop1Name = "Leo Ma"
	develop1Mail = "leo.ma@ericsson.com"
	develop2Name = "Emil Gustafsson"
	develop2Mail = "emil.gustafsson@ericsson.com"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

googleJavaFormat {
  toolVersion = '1.7'
}

dependencies {
    compile group: 'org.pcap4j', name: 'pcap4j-packetfactory-static', version:'1.7.7' //1.8.0+ requires java 9
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.9'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.15.0'
    compile group: 'org.zeromq', name: 'jeromq', version:'0.5.1'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.5'
    compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.10'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'

    sourceSets {
        e2eTest {
            compileClasspath = sourceSets.main.output + configurations.testRuntime
            runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
            java {
                srcDirs = ["src/e2e-test/java"]
            }
        }
    }
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	javadoc.options.addStringOption('Xdoclint:none', '-quiet')
	from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

test {
    testLogging {
        events "passed", "skipped" , "failed"
    }
}

task e2eTest(type: Test) {
    group 'verification'
    description 'Runs E2E testing on trex-java-sdk'

    outputs.upToDateWhen { false }
    testClassesDirs = sourceSets.e2eTest.output.classesDirs
    classpath = sourceSets.e2eTest.runtimeClasspath

    test {
        testLogging {
            events "passed", "skipped" , "failed"
            exceptionFormat "full"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId archivesBaseName
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = projectName
		        packaging = 'jar'
		    	description = projectDescription
		        url = projectUrl
	        
		        licenses {
		            license {
		                name = licenseName
		                url = licenseUrl
		            }
		        }
		        
		        scm {
		          connection = scmConnection
		          developerConnection = scmDeveloperConnection
		          url = scmUrl
		        }
		        
		        developers {
		          developer {
		            name = develop1Name
		            email = develop1Mail
		          }
		          developer {
		            name = develop2Name
		            email = develop2Mail
		          }
				}
            }
        }
    }
    
    repositories {
        maven {
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username project.findProperty('nexusUsername') ?: 'secured'
                password project.findProperty('nexusPassword') ?: 'secured'
            }
        }
    }
    
}

signing {
    sign publishing.publications.mavenJava
}

generatePomFileForMavenJavaPublication {
    destination = file("pom.xml")
}

jar {
    dependsOn generatePomFileForMavenJavaPublication
    into("META-INF/maven/$project.group/$project.name") {
	from("pom.xml")
    }
}

task jarWithDependencies(type: Jar) {
    dependsOn generatePomFileForMavenJavaPublication
    baseName = project.name + '-with-dependencies'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

nexusStaging {
	numberOfRetries = 40
	delayBetweenRetriesInMillis = 5000
}
